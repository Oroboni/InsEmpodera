// <auto-generated />
using System;
using Empodera.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InsEmpodera.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Empodera.Models.Acoes", b =>
                {
                    b.Property<int>("IdAcoes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtividadeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAcoes");

                    b.ToTable("Acoes");

                    b.HasData(
                        new
                        {
                            IdAcoes = 1,
                            AtividadeId = 1,
                            Quantidade = 10
                        },
                        new
                        {
                            IdAcoes = 2,
                            AtividadeId = 2,
                            Quantidade = 15
                        },
                        new
                        {
                            IdAcoes = 3,
                            AtividadeId = 3,
                            Quantidade = 20
                        },
                        new
                        {
                            IdAcoes = 4,
                            AtividadeId = 4,
                            Quantidade = 12
                        },
                        new
                        {
                            IdAcoes = 5,
                            AtividadeId = 5,
                            Quantidade = 25
                        });
                });

            modelBuilder.Entity("Empodera.Models.AcoesAtores", b =>
                {
                    b.Property<int>("IdAAtores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AcoesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAAtores");

                    b.ToTable("AcoesAtores");

                    b.HasData(
                        new
                        {
                            IdAAtores = 1,
                            AcoesId = 1,
                            AtorId = 1
                        },
                        new
                        {
                            IdAAtores = 2,
                            AcoesId = 2,
                            AtorId = 2
                        },
                        new
                        {
                            IdAAtores = 3,
                            AcoesId = 3,
                            AtorId = 3
                        },
                        new
                        {
                            IdAAtores = 4,
                            AcoesId = 4,
                            AtorId = 4
                        },
                        new
                        {
                            IdAAtores = 5,
                            AcoesId = 5,
                            AtorId = 5
                        });
                });

            modelBuilder.Entity("Empodera.Models.AnexosDiario", b =>
                {
                    b.Property<int>("IdAnexos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DiarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAnexos");

                    b.ToTable("AnexosDiario");

                    b.HasData(
                        new
                        {
                            IdAnexos = 1,
                            Caminho = "foto1.png",
                            DiarioId = 1
                        },
                        new
                        {
                            IdAnexos = 2,
                            Caminho = "foto2.png",
                            DiarioId = 2
                        },
                        new
                        {
                            IdAnexos = 3,
                            Caminho = "documento1.pdf",
                            DiarioId = 3
                        },
                        new
                        {
                            IdAnexos = 4,
                            Caminho = "audio1.mp3",
                            DiarioId = 4
                        },
                        new
                        {
                            IdAnexos = 5,
                            Caminho = "video1.mp4",
                            DiarioId = 5
                        });
                });

            modelBuilder.Entity("Empodera.Models.Atividade", b =>
                {
                    b.Property<int>("IdAtividade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdAtividade");

                    b.ToTable("Atividades");

                    b.HasData(
                        new
                        {
                            IdAtividade = 1,
                            Descricao = "Atividade de pintura e desenho",
                            Nome = "Oficina de Artes"
                        },
                        new
                        {
                            IdAtividade = 2,
                            Descricao = "Instrumentos e canto",
                            Nome = "Aula de Música"
                        },
                        new
                        {
                            IdAtividade = 3,
                            Descricao = "Futebol, vôlei, basquete",
                            Nome = "Esporte Comunitário"
                        },
                        new
                        {
                            IdAtividade = 4,
                            Descricao = "Informática básica",
                            Nome = "Curso de Tecnologia"
                        },
                        new
                        {
                            IdAtividade = 5,
                            Descricao = "Troca de produtos",
                            Nome = "Feira Solidária"
                        });
                });

            modelBuilder.Entity("Empodera.Models.AtividadesEixo", b =>
                {
                    b.Property<int>("IdAEixo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtividadeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EixoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAEixo");

                    b.HasIndex("AtividadeId");

                    b.HasIndex("EixoId");

                    b.ToTable("AtividadeEixos");

                    b.HasData(
                        new
                        {
                            IdAEixo = 1,
                            AtividadeId = 1,
                            EixoId = 1
                        },
                        new
                        {
                            IdAEixo = 2,
                            AtividadeId = 2,
                            EixoId = 2
                        },
                        new
                        {
                            IdAEixo = 3,
                            AtividadeId = 3,
                            EixoId = 3
                        },
                        new
                        {
                            IdAEixo = 4,
                            AtividadeId = 4,
                            EixoId = 4
                        },
                        new
                        {
                            IdAEixo = 5,
                            AtividadeId = 5,
                            EixoId = 5
                        });
                });

            modelBuilder.Entity("Empodera.Models.Ator", b =>
                {
                    b.Property<int>("IdAtores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtModificacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Extra")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Idade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PapelSocial1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PapelSocial2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Telefone")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAtores");

                    b.ToTable("Atores");

                    b.HasData(
                        new
                        {
                            IdAtores = 1,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Extra = "Ativo",
                            Genero = "Masculino",
                            Idade = 30,
                            Nome = "Lucas Andrade",
                            PapelSocial1 = "Líder",
                            PapelSocial2 = "Professor",
                            Telefone = 119111111
                        },
                        new
                        {
                            IdAtores = 2,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Extra = "Ativo",
                            Genero = "Feminino",
                            Idade = 28,
                            Nome = "Fernanda Costa",
                            PapelSocial1 = "Médica",
                            PapelSocial2 = "Voluntária",
                            Telefone = 219222222
                        },
                        new
                        {
                            IdAtores = 3,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Extra = "Ativo",
                            Genero = "Masculino",
                            Idade = 35,
                            Nome = "Roberto Alves",
                            PapelSocial1 = "Advogado",
                            PapelSocial2 = "Consultor",
                            Telefone = 319333333
                        },
                        new
                        {
                            IdAtores = 4,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Extra = "Ativo",
                            Genero = "Feminino",
                            Idade = 26,
                            Nome = "Juliana Prado",
                            PapelSocial1 = "Estudante",
                            PapelSocial2 = "Estagiária",
                            Telefone = 419444444
                        },
                        new
                        {
                            IdAtores = 5,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Extra = "Ativo",
                            Genero = "Masculino",
                            Idade = 40,
                            Nome = "Marcelo Nunes",
                            PapelSocial1 = "Empresário",
                            PapelSocial2 = "Mentor",
                            Telefone = 519555555
                        });
                });

            modelBuilder.Entity("Empodera.Models.AtorComunidade", b =>
                {
                    b.Property<int>("IdAComunidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComunidadeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAComunidade");

                    b.ToTable("AtorComunidades");

                    b.HasData(
                        new
                        {
                            IdAComunidade = 1,
                            AtorId = 1,
                            ComunidadeId = 1
                        },
                        new
                        {
                            IdAComunidade = 2,
                            AtorId = 2,
                            ComunidadeId = 2
                        },
                        new
                        {
                            IdAComunidade = 3,
                            AtorId = 3,
                            ComunidadeId = 3
                        },
                        new
                        {
                            IdAComunidade = 4,
                            AtorId = 4,
                            ComunidadeId = 4
                        },
                        new
                        {
                            IdAComunidade = 5,
                            AtorId = 5,
                            ComunidadeId = 5
                        });
                });

            modelBuilder.Entity("Empodera.Models.AvaliacaoPessoal", b =>
                {
                    b.Property<int>("IdAvaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssBasica")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CCrimes")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtModificacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("Educacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Lazer")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Moradia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ocupacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Prevenção")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Saude")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Substancias")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAvaliacao");

                    b.HasIndex("AtorId");

                    b.ToTable("AvaliacoesPessoais");

                    b.HasData(
                        new
                        {
                            IdAvaliacao = 1,
                            AssBasica = 2,
                            AtorId = 1,
                            CCrimes = 1,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Educacao = 3,
                            Lazer = 2,
                            Moradia = 1,
                            Ocupacao = 1,
                            Prevenção = 1,
                            Saude = 2,
                            Substancias = 0
                        },
                        new
                        {
                            IdAvaliacao = 2,
                            AssBasica = 2,
                            AtorId = 2,
                            CCrimes = 0,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Educacao = 4,
                            Lazer = 3,
                            Moradia = 2,
                            Ocupacao = 2,
                            Prevenção = 1,
                            Saude = 3,
                            Substancias = 1
                        },
                        new
                        {
                            IdAvaliacao = 3,
                            AssBasica = 3,
                            AtorId = 3,
                            CCrimes = 2,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Educacao = 2,
                            Lazer = 1,
                            Moradia = 3,
                            Ocupacao = 3,
                            Prevenção = 2,
                            Saude = 2,
                            Substancias = 1
                        },
                        new
                        {
                            IdAvaliacao = 4,
                            AssBasica = 4,
                            AtorId = 4,
                            CCrimes = 0,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Educacao = 4,
                            Lazer = 4,
                            Moradia = 1,
                            Ocupacao = 2,
                            Prevenção = 2,
                            Saude = 3,
                            Substancias = 0
                        },
                        new
                        {
                            IdAvaliacao = 5,
                            AssBasica = 2,
                            AtorId = 5,
                            CCrimes = 1,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Educacao = 3,
                            Lazer = 2,
                            Moradia = 2,
                            Ocupacao = 3,
                            Prevenção = 3,
                            Saude = 2,
                            Substancias = 2
                        });
                });

            modelBuilder.Entity("Empodera.Models.Comunidade", b =>
                {
                    b.Property<int>("IdComunidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DescricaoAcessibilidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtModificacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdComunidade");

                    b.ToTable("Comunidades");

                    b.HasData(
                        new
                        {
                            IdComunidade = 1,
                            Complemento = "Zona Leste",
                            Descricao = "Comunidade em SP",
                            DescricaoAcessibilidade = "Acessível",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Local = "São Paulo",
                            Nome = "Comunidade A",
                            Status = "Ativa"
                        },
                        new
                        {
                            IdComunidade = 2,
                            Complemento = "Zona Norte",
                            Descricao = "Comunidade no RJ",
                            DescricaoAcessibilidade = "Parcial",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Local = "Rio de Janeiro",
                            Nome = "Comunidade B",
                            Status = "Ativa"
                        },
                        new
                        {
                            IdComunidade = 3,
                            Complemento = "Centro",
                            Descricao = "Comunidade em BH",
                            DescricaoAcessibilidade = "Baixa",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Local = "Belo Horizonte",
                            Nome = "Comunidade C",
                            Status = "Inativa"
                        },
                        new
                        {
                            IdComunidade = 4,
                            Complemento = "Sul",
                            Descricao = "Comunidade no PR",
                            DescricaoAcessibilidade = "Alta",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Local = "Curitiba",
                            Nome = "Comunidade D",
                            Status = "Ativa"
                        },
                        new
                        {
                            IdComunidade = 5,
                            Complemento = "Norte",
                            Descricao = "Comunidade na BA",
                            DescricaoAcessibilidade = "Média",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Local = "Salvador",
                            Nome = "Comunidade E",
                            Status = "Ativa"
                        });
                });

            modelBuilder.Entity("Empodera.Models.DiarioAcoes", b =>
                {
                    b.Property<int>("IdDAcoes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AcoesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdDAcoes");

                    b.ToTable("DiarioAcoes");

                    b.HasData(
                        new
                        {
                            IdDAcoes = 1,
                            AcoesId = 1,
                            DiarioId = 1
                        },
                        new
                        {
                            IdDAcoes = 2,
                            AcoesId = 2,
                            DiarioId = 2
                        },
                        new
                        {
                            IdDAcoes = 3,
                            AcoesId = 3,
                            DiarioId = 3
                        },
                        new
                        {
                            IdDAcoes = 4,
                            AcoesId = 4,
                            DiarioId = 4
                        },
                        new
                        {
                            IdDAcoes = 5,
                            AcoesId = 5,
                            DiarioId = 5
                        });
                });

            modelBuilder.Entity("Empodera.Models.DiarioCampo", b =>
                {
                    b.Property<int>("IdDCampo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComunidadeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtModificacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdDCampo");

                    b.ToTable("DiariosCampo");

                    b.HasData(
                        new
                        {
                            IdDCampo = 1,
                            ComunidadeId = 1,
                            Data = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Reunião comunitária",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Localizacao = "Praça central"
                        },
                        new
                        {
                            IdDCampo = 2,
                            ComunidadeId = 2,
                            Data = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Atividade esportiva",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Localizacao = "Quadra"
                        },
                        new
                        {
                            IdDCampo = 3,
                            ComunidadeId = 3,
                            Data = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Feira cultural",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Localizacao = "Centro comunitário"
                        },
                        new
                        {
                            IdDCampo = 4,
                            ComunidadeId = 4,
                            Data = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Ação social",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Localizacao = "Escola local"
                        },
                        new
                        {
                            IdDCampo = 5,
                            ComunidadeId = 5,
                            Data = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Encontro de líderes",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Localizacao = "Associação"
                        });
                });

            modelBuilder.Entity("Empodera.Models.DiarioEixo", b =>
                {
                    b.Property<int>("IdDiarioEixo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EixoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdDiarioEixo");

                    b.ToTable("DiarioEixos");

                    b.HasData(
                        new
                        {
                            IdDiarioEixo = 1,
                            DiarioId = 1,
                            EixoId = 1
                        },
                        new
                        {
                            IdDiarioEixo = 2,
                            DiarioId = 2,
                            EixoId = 2
                        },
                        new
                        {
                            IdDiarioEixo = 3,
                            DiarioId = 3,
                            EixoId = 3
                        },
                        new
                        {
                            IdDiarioEixo = 4,
                            DiarioId = 4,
                            EixoId = 4
                        },
                        new
                        {
                            IdDiarioEixo = 5,
                            DiarioId = 5,
                            EixoId = 5
                        });
                });

            modelBuilder.Entity("Empodera.Models.Eixo", b =>
                {
                    b.Property<int>("IdEixo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdEixo");

                    b.ToTable("Eixos");

                    b.HasData(
                        new
                        {
                            IdEixo = 1,
                            Nome = "Educação"
                        },
                        new
                        {
                            IdEixo = 2,
                            Nome = "Saúde"
                        },
                        new
                        {
                            IdEixo = 3,
                            Nome = "Segurança"
                        },
                        new
                        {
                            IdEixo = 4,
                            Nome = "Cultura"
                        },
                        new
                        {
                            IdEixo = 5,
                            Nome = "Infraestrutura"
                        });
                });

            modelBuilder.Entity("Empodera.Models.FichaCondicoes", b =>
                {
                    b.Property<int>("IdCondicoes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cond")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FichaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdCondicoes");

                    b.HasIndex("FichaId");

                    b.ToTable("FichaCondicoes");

                    b.HasData(
                        new
                        {
                            IdCondicoes = 1,
                            Cond = "Boa saúde",
                            FichaId = 1
                        },
                        new
                        {
                            IdCondicoes = 2,
                            Cond = "Necessita assistência",
                            FichaId = 2
                        },
                        new
                        {
                            IdCondicoes = 3,
                            Cond = "Situação estável",
                            FichaId = 3
                        },
                        new
                        {
                            IdCondicoes = 4,
                            Cond = "Risco social",
                            FichaId = 4
                        },
                        new
                        {
                            IdCondicoes = 5,
                            Cond = "Bem-estar adequado",
                            FichaId = 5
                        });
                });

            modelBuilder.Entity("Empodera.Models.FichaPeticoes", b =>
                {
                    b.Property<int>("IdPeticoes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FichaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pet")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdPeticoes");

                    b.HasIndex("FichaId");

                    b.ToTable("FichaPeticoes");

                    b.HasData(
                        new
                        {
                            IdPeticoes = 1,
                            FichaId = 1,
                            Pet = "Solicitação de escola"
                        },
                        new
                        {
                            IdPeticoes = 2,
                            FichaId = 2,
                            Pet = "Auxílio financeiro"
                        },
                        new
                        {
                            IdPeticoes = 3,
                            FichaId = 3,
                            Pet = "Atendimento médico"
                        },
                        new
                        {
                            IdPeticoes = 4,
                            FichaId = 4,
                            Pet = "Programa social"
                        },
                        new
                        {
                            IdPeticoes = 5,
                            FichaId = 5,
                            Pet = "Cursos de capacitação"
                        });
                });

            modelBuilder.Entity("Empodera.Models.FichaPrimeiroContato", b =>
                {
                    b.Property<int>("IdFicha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AEscola")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPrimeiroContato")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Coment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtModificacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("EParceiro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EstaFamiliar")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EstruFamiliar")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FPeloParceirto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FonteDados")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LContato")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LTrat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NFilhas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NFilhos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QReabili")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SCalc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SComp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SLer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdFicha");

                    b.HasIndex("AtorId");

                    b.ToTable("FichasPrimeiroContato");

                    b.HasData(
                        new
                        {
                            IdFicha = 1,
                            AEscola = 1,
                            AtorId = 1,
                            CPrimeiroContato = "2023-1",
                            Coment = "Boa integração",
                            Data = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EParceiro = "Sim",
                            EstaFamiliar = "Sim",
                            EstruFamiliar = "Completa",
                            FPeloParceirto = "Não",
                            FonteDados = "Censo",
                            LContato = "Vizinho",
                            LTrat = "Nenhum",
                            Localizacao = "Zona Norte",
                            NFilhas = 1,
                            NFilhos = 2,
                            QReabili = 0,
                            SCalc = "Sim",
                            SComp = "Não",
                            SLer = "Sim"
                        },
                        new
                        {
                            IdFicha = 2,
                            AEscola = 0,
                            AtorId = 2,
                            CPrimeiroContato = "2023-2",
                            Coment = "Necessita apoio",
                            Data = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EParceiro = "Não",
                            EstaFamiliar = "Não",
                            EstruFamiliar = "Parcial",
                            FPeloParceirto = "Não",
                            FonteDados = "Empoderavista",
                            LContato = "ONG",
                            LTrat = "Clínica",
                            Localizacao = "Zona Sul",
                            NFilhas = 0,
                            NFilhos = 1,
                            QReabili = 1,
                            SCalc = "Não",
                            SComp = "Não",
                            SLer = "Sim"
                        },
                        new
                        {
                            IdFicha = 3,
                            AEscola = 1,
                            AtorId = 3,
                            CPrimeiroContato = "2023-3",
                            Coment = "Boa situação",
                            Data = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EParceiro = "Sim",
                            EstaFamiliar = "Sim",
                            EstruFamiliar = "Completa",
                            FPeloParceirto = "Sim",
                            FonteDados = "Formulário",
                            LContato = "Assistente social",
                            LTrat = "Nenhum",
                            Localizacao = "Zona Leste",
                            NFilhas = 2,
                            NFilhos = 3,
                            QReabili = 0,
                            SCalc = "Sim",
                            SComp = "Sim",
                            SLer = "Sim"
                        },
                        new
                        {
                            IdFicha = 4,
                            AEscola = 1,
                            AtorId = 4,
                            CPrimeiroContato = "2023-4",
                            Coment = "Vulnerável",
                            Data = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EParceiro = "Não",
                            EstaFamiliar = "Não",
                            EstruFamiliar = "Incompleta",
                            FPeloParceirto = "Não",
                            FonteDados = "Empoderavista",
                            LContato = "Igreja",
                            LTrat = "Hospital",
                            Localizacao = "Zona Oeste",
                            NFilhas = 1,
                            NFilhos = 0,
                            QReabili = 2,
                            SCalc = "Não",
                            SComp = "Não",
                            SLer = "Não"
                        },
                        new
                        {
                            IdFicha = 5,
                            AEscola = 1,
                            AtorId = 5,
                            CPrimeiroContato = "2023-5",
                            Coment = "Estável",
                            Data = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EParceiro = "Sim",
                            EstaFamiliar = "Sim",
                            EstruFamiliar = "Completa",
                            FPeloParceirto = "Não",
                            FonteDados = "Censo escolar",
                            LContato = "Escola",
                            LTrat = "Nenhum",
                            Localizacao = "Centro",
                            NFilhas = 2,
                            NFilhos = 2,
                            QReabili = 0,
                            SCalc = "Sim",
                            SComp = "Sim",
                            SLer = "Sim"
                        });
                });

            modelBuilder.Entity("Empodera.Models.FichaResp", b =>
                {
                    b.Property<int>("IdCondicoes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FichaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Resp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCondicoes");

                    b.HasIndex("FichaId");

                    b.ToTable("FichaRespostas");

                    b.HasData(
                        new
                        {
                            IdCondicoes = 1,
                            FichaId = 1,
                            Resp = "Atendido"
                        },
                        new
                        {
                            IdCondicoes = 2,
                            FichaId = 2,
                            Resp = "Pendente"
                        },
                        new
                        {
                            IdCondicoes = 3,
                            FichaId = 3,
                            Resp = "Atendido"
                        },
                        new
                        {
                            IdCondicoes = 4,
                            FichaId = 4,
                            Resp = "Em análise"
                        },
                        new
                        {
                            IdCondicoes = 5,
                            FichaId = 5,
                            Resp = "Negado"
                        });
                });

            modelBuilder.Entity("Empodera.Models.FichaResult", b =>
                {
                    b.Property<int>("IdCondicoes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FichaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCondicoes");

                    b.HasIndex("FichaId");

                    b.ToTable("FichaResultados");

                    b.HasData(
                        new
                        {
                            IdCondicoes = 1,
                            FichaId = 1,
                            Result = "Positivo"
                        },
                        new
                        {
                            IdCondicoes = 2,
                            FichaId = 2,
                            Result = "Negativo"
                        },
                        new
                        {
                            IdCondicoes = 3,
                            FichaId = 3,
                            Result = "Positivo"
                        },
                        new
                        {
                            IdCondicoes = 4,
                            FichaId = 4,
                            Result = "Neutro"
                        },
                        new
                        {
                            IdCondicoes = 5,
                            FichaId = 5,
                            Result = "Positivo"
                        });
                });

            modelBuilder.Entity("Empodera.Models.PerfilAcesso", b =>
                {
                    b.Property<int>("IdPAcesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPAcesso");

                    b.ToTable("PerfisAcesso");

                    b.HasData(
                        new
                        {
                            IdPAcesso = 1
                        },
                        new
                        {
                            IdPAcesso = 2
                        },
                        new
                        {
                            IdPAcesso = 3
                        },
                        new
                        {
                            IdPAcesso = 4
                        },
                        new
                        {
                            IdPAcesso = 5
                        });
                });

            modelBuilder.Entity("Empodera.Models.Permissao", b =>
                {
                    b.Property<int>("IdPermissoes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PerfilAcessoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PermissaoNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdPermissoes");

                    b.ToTable("Permissoes");

                    b.HasData(
                        new
                        {
                            IdPermissoes = 1,
                            PerfilAcessoId = 1,
                            PermissaoNome = "Ler"
                        },
                        new
                        {
                            IdPermissoes = 2,
                            PerfilAcessoId = 2,
                            PermissaoNome = "Escrever"
                        },
                        new
                        {
                            IdPermissoes = 3,
                            PerfilAcessoId = 3,
                            PermissaoNome = "Editar"
                        },
                        new
                        {
                            IdPermissoes = 4,
                            PerfilAcessoId = 4,
                            PermissaoNome = "Excluir"
                        },
                        new
                        {
                            IdPermissoes = 5,
                            PerfilAcessoId = 5,
                            PermissaoNome = "Administrador"
                        });
                });

            modelBuilder.Entity("Empodera.Models.RedeEixo", b =>
                {
                    b.Property<int>("IdRedeEixo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EixoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RedeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdRedeEixo");

                    b.ToTable("RedeEixos");

                    b.HasData(
                        new
                        {
                            IdRedeEixo = 1,
                            EixoId = 1,
                            RedeId = 1
                        },
                        new
                        {
                            IdRedeEixo = 2,
                            EixoId = 2,
                            RedeId = 2
                        },
                        new
                        {
                            IdRedeEixo = 3,
                            EixoId = 3,
                            RedeId = 3
                        },
                        new
                        {
                            IdRedeEixo = 4,
                            EixoId = 4,
                            RedeId = 4
                        },
                        new
                        {
                            IdRedeEixo = 5,
                            EixoId = 5,
                            RedeId = 5
                        });
                });

            modelBuilder.Entity("Empodera.Models.RedePrimaria", b =>
                {
                    b.Property<int>("IdRedePrimaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtorPrincipalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtorRelacionadoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoRelacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdRedePrimaria");

                    b.HasIndex("AtorRelacionadoId");

                    b.ToTable("RedesPrimarias");

                    b.HasData(
                        new
                        {
                            IdRedePrimaria = 1,
                            AtorPrincipalId = 1,
                            AtorRelacionadoId = 2,
                            TipoRelacao = "Amizade"
                        },
                        new
                        {
                            IdRedePrimaria = 2,
                            AtorPrincipalId = 2,
                            AtorRelacionadoId = 3,
                            TipoRelacao = "Parceria"
                        },
                        new
                        {
                            IdRedePrimaria = 3,
                            AtorPrincipalId = 3,
                            AtorRelacionadoId = 4,
                            TipoRelacao = "Trabalho"
                        },
                        new
                        {
                            IdRedePrimaria = 4,
                            AtorPrincipalId = 4,
                            AtorRelacionadoId = 5,
                            TipoRelacao = "Estudo"
                        },
                        new
                        {
                            IdRedePrimaria = 5,
                            AtorPrincipalId = 5,
                            AtorRelacionadoId = 1,
                            TipoRelacao = "Mentoria"
                        });
                });

            modelBuilder.Entity("Empodera.Models.RedeRecurso", b =>
                {
                    b.Property<int>("IdRede")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComunidadeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dispositivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtModificacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Servicos")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdRede");

                    b.ToTable("Redes");

                    b.HasData(
                        new
                        {
                            IdRede = 1,
                            AtorId = 1,
                            ComunidadeId = 1,
                            Dispositivo = "PC",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Servicos = "Acesso remoto",
                            Tipo = "Internet"
                        },
                        new
                        {
                            IdRede = 2,
                            AtorId = 2,
                            ComunidadeId = 2,
                            Dispositivo = "Celular",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Servicos = "Chamadas",
                            Tipo = "Telefonia"
                        },
                        new
                        {
                            IdRede = 3,
                            AtorId = 3,
                            ComunidadeId = 3,
                            Dispositivo = "Gerador",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Servicos = "Suporte elétrico",
                            Tipo = "Energia"
                        },
                        new
                        {
                            IdRede = 4,
                            AtorId = 4,
                            ComunidadeId = 4,
                            Dispositivo = "Reservatório",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Servicos = "Abastecimento",
                            Tipo = "Água"
                        },
                        new
                        {
                            IdRede = 5,
                            AtorId = 5,
                            ComunidadeId = 5,
                            Dispositivo = "Clínica",
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtModificacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Servicos = "Atendimento médico",
                            Tipo = "Saúde"
                        });
                });

            modelBuilder.Entity("Empodera.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NivelPermissao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ocupacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtNascimento = new DateTime(1990, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joao@email.com",
                            Foto = "joao.png",
                            Genero = "Masculino",
                            NivelPermissao = 1,
                            Nome = "João Silva",
                            Ocupacao = "Professor",
                            Senha = "123456"
                        },
                        new
                        {
                            IdUsuario = 2,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtNascimento = new DateTime(1988, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria@email.com",
                            Foto = "maria.png",
                            Genero = "Feminino",
                            NivelPermissao = 2,
                            Nome = "Maria Souza",
                            Ocupacao = "Engenheira",
                            Senha = "123456"
                        },
                        new
                        {
                            IdUsuario = 3,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtNascimento = new DateTime(2000, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carlos@email.com",
                            Foto = "carlos.png",
                            Genero = "Masculino",
                            NivelPermissao = 1,
                            Nome = "Carlos Lima",
                            Ocupacao = "Estudante",
                            Senha = "123456"
                        },
                        new
                        {
                            IdUsuario = 4,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtNascimento = new DateTime(1995, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ana@email.com",
                            Foto = "ana.png",
                            Genero = "Feminino",
                            NivelPermissao = 3,
                            Nome = "Ana Pereira",
                            Ocupacao = "Médica",
                            Senha = "123456"
                        },
                        new
                        {
                            IdUsuario = 5,
                            DtCriacao = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtNascimento = new DateTime(1985, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pedro@email.com",
                            Foto = "pedro.png",
                            Genero = "Masculino",
                            NivelPermissao = 2,
                            Nome = "Pedro Santos",
                            Ocupacao = "Advogado",
                            Senha = "123456"
                        });
                });

            modelBuilder.Entity("Empodera.Models.UsuarioPerfil", b =>
                {
                    b.Property<int>("IdPUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PerfilAcessoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPUsuario");

                    b.ToTable("UsuarioPerfis");

                    b.HasData(
                        new
                        {
                            IdPUsuario = 1,
                            PerfilAcessoId = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            IdPUsuario = 2,
                            PerfilAcessoId = 2,
                            UsuarioId = 2
                        },
                        new
                        {
                            IdPUsuario = 3,
                            PerfilAcessoId = 3,
                            UsuarioId = 3
                        },
                        new
                        {
                            IdPUsuario = 4,
                            PerfilAcessoId = 4,
                            UsuarioId = 4
                        },
                        new
                        {
                            IdPUsuario = 5,
                            PerfilAcessoId = 5,
                            UsuarioId = 5
                        });
                });

            modelBuilder.Entity("Empodera.Models.Vulnerabilidade", b =>
                {
                    b.Property<int>("IdVulnerabilidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComunidadeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Servicos")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdVulnerabilidade");

                    b.ToTable("Vulnerabilidades");

                    b.HasData(
                        new
                        {
                            IdVulnerabilidade = 1,
                            ComunidadeId = 1,
                            Localizacao = "Zona Norte",
                            Nome = "Falta de saneamento",
                            Servicos = "Nenhum"
                        },
                        new
                        {
                            IdVulnerabilidade = 2,
                            ComunidadeId = 2,
                            Localizacao = "Zona Leste",
                            Nome = "Violência urbana",
                            Servicos = "Polícia comunitária"
                        },
                        new
                        {
                            IdVulnerabilidade = 3,
                            ComunidadeId = 3,
                            Localizacao = "Centro",
                            Nome = "Desemprego",
                            Servicos = "Cursos profissionalizantes"
                        },
                        new
                        {
                            IdVulnerabilidade = 4,
                            ComunidadeId = 4,
                            Localizacao = "Zona Oeste",
                            Nome = "Drogas",
                            Servicos = "Clínica de reabilitação"
                        },
                        new
                        {
                            IdVulnerabilidade = 5,
                            ComunidadeId = 5,
                            Localizacao = "Zona Sul",
                            Nome = "Falta de escolas",
                            Servicos = "Projetos de ensino"
                        });
                });

            modelBuilder.Entity("Empodera.Models.VulnerabilidadesEixo", b =>
                {
                    b.Property<int>("IdVEixo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EixoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VulnerabilidadeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdVEixo");

                    b.ToTable("VulnerabilidadeEixos");

                    b.HasData(
                        new
                        {
                            IdVEixo = 1,
                            EixoId = 1,
                            VulnerabilidadeId = 1
                        },
                        new
                        {
                            IdVEixo = 2,
                            EixoId = 2,
                            VulnerabilidadeId = 2
                        },
                        new
                        {
                            IdVEixo = 3,
                            EixoId = 3,
                            VulnerabilidadeId = 3
                        },
                        new
                        {
                            IdVEixo = 4,
                            EixoId = 4,
                            VulnerabilidadeId = 4
                        },
                        new
                        {
                            IdVEixo = 5,
                            EixoId = 5,
                            VulnerabilidadeId = 5
                        });
                });

            modelBuilder.Entity("Empodera.Models.AtividadesEixo", b =>
                {
                    b.HasOne("Empodera.Models.Atividade", null)
                        .WithMany()
                        .HasForeignKey("AtividadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Empodera.Models.Eixo", null)
                        .WithMany()
                        .HasForeignKey("EixoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Empodera.Models.AvaliacaoPessoal", b =>
                {
                    b.HasOne("Empodera.Models.Ator", null)
                        .WithMany()
                        .HasForeignKey("AtorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Empodera.Models.FichaCondicoes", b =>
                {
                    b.HasOne("Empodera.Models.FichaPrimeiroContato", null)
                        .WithMany()
                        .HasForeignKey("FichaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Empodera.Models.FichaPeticoes", b =>
                {
                    b.HasOne("Empodera.Models.FichaPrimeiroContato", null)
                        .WithMany()
                        .HasForeignKey("FichaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Empodera.Models.FichaPrimeiroContato", b =>
                {
                    b.HasOne("Empodera.Models.Ator", null)
                        .WithMany()
                        .HasForeignKey("AtorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Empodera.Models.FichaResp", b =>
                {
                    b.HasOne("Empodera.Models.FichaPrimeiroContato", null)
                        .WithMany()
                        .HasForeignKey("FichaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Empodera.Models.FichaResult", b =>
                {
                    b.HasOne("Empodera.Models.FichaPrimeiroContato", null)
                        .WithMany()
                        .HasForeignKey("FichaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Empodera.Models.RedePrimaria", b =>
                {
                    b.HasOne("Empodera.Models.Ator", null)
                        .WithMany()
                        .HasForeignKey("AtorRelacionadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
